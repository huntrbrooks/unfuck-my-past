import { NextRequest, NextResponse } from 'next/server'
import { auth } from '@clerk/nextjs/server'

export async function POST(request: NextRequest) {
  try {
    const { userId } = await auth()
    
    if (!userId) {
      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 })
    }

    const body = await request.json()
    const { report } = body

    if (!report) {
      return NextResponse.json({ error: 'Report content is required' }, { status: 400 })
    }

    // For now, we'll return a simple HTML version that can be printed as PDF
    // In production, you might want to use a proper PDF generation library like puppeteer
    const htmlContent = `
      <!DOCTYPE html>
      <html>
        <head>
          <meta charset="utf-8">
          <title>Comprehensive Diagnostic Report</title>
          <style>
            body {
              font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
              line-height: 1.6;
              color: #333;
              max-width: 800px;
              margin: 0 auto;
              padding: 20px;
            }
            .header {
              background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
              color: white;
              padding: 30px;
              border-radius: 10px;
              margin-bottom: 30px;
              text-align: center;
            }
            .header h1 {
              margin: 0;
              font-size: 2.5em;
              font-weight: bold;
            }
            .header p {
              margin: 10px 0 0 0;
              opacity: 0.9;
              font-size: 1.1em;
            }
            h2 {
              color: #667eea;
              border-bottom: 2px solid #667eea;
              padding-bottom: 10px;
              margin-top: 40px;
              margin-bottom: 20px;
            }
            h3 {
              color: #764ba2;
              margin-top: 30px;
              margin-bottom: 15px;
            }
            .highlight-box {
              background: #f8f9fa;
              border-left: 4px solid #667eea;
              padding: 20px;
              margin: 20px 0;
              border-radius: 5px;
            }
            .strength-section {
              background: #e8f5e8;
              border: 1px solid #4caf50;
              padding: 20px;
              margin: 20px 0;
              border-radius: 8px;
            }
            .action-section {
              background: #fff3cd;
              border: 1px solid #ffc107;
              padding: 20px;
              margin: 20px 0;
              border-radius: 8px;
            }
            .toxicity-score {
              display: inline-block;
              background: #dc3545;
              color: white;
              padding: 10px 20px;
              border-radius: 25px;
              font-weight: bold;
              font-size: 1.2em;
            }
            .footer {
              margin-top: 50px;
              padding-top: 20px;
              border-top: 1px solid #ddd;
              text-align: center;
              color: #666;
            }
            @media print {
              body { margin: 0; }
              .header { page-break-after: avoid; }
              h2 { page-break-after: avoid; }
            }
          </style>
        </head>
        <body>
          <div class="header">
            <h1>üîç Comprehensive Diagnostic Report</h1>
            <p>Your personalized trauma analysis & healing roadmap</p>
            <p><small>Generated on ${new Date().toLocaleDateString()}</small></p>
          </div>

          ${report.replace(/\n/g, '<br>')}

          <div class="footer">
            <p>This report was generated by Unfuck Your Past - 30-Day Healing Journey</p>
            <p>For support and additional resources, visit our platform</p>
          </div>
        </body>
      </html>
    `

    // Return the HTML content as a downloadable file
    return new NextResponse(htmlContent, {
      headers: {
        'Content-Type': 'text/html',
        'Content-Disposition': 'attachment; filename="comprehensive-diagnostic-report.html"'
      }
    })

  } catch (error) {
    console.error('PDF export error:', error)
    return NextResponse.json(
      { error: 'Failed to generate PDF export' },
      { status: 500 }
    )
  }
}
